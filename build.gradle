/*
 * Copyright 2020-2020 Elypia CIC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "idea"
    id "java-library"
    id "maven"
    id "maven-publish"
    id "jacoco"
    id "com.jfrog.bintray" version "1.8.5"
}

ext {
    repoUrl = "https://gitlab.com/Elypia/yaml4deltaspike"
    gitUrl = "${repoUrl}.git"
    issueUrl = "${repoUrl}/issues"
    website = "https://elypia.org/"

    deltaSpikeVersion = "1.9.3"
}

group = "org.elypia.yaml4deltaspike"
version = "1.1.1"
description = "YAML configuration source for the DeltaSpike configuration mechanism."

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    jcenter()
}

dependencies {
    // YAML
    implementation "org.yaml:snakeyaml:1.26"

    // DeltaSpike Core API
    implementation "org.apache.deltaspike.core:deltaspike-core-impl:${deltaSpikeVersion}"

    // Logging
    implementation "org.slf4j:slf4j-api:1.7.30"
    testRuntimeOnly "ch.qos.logback:logback-classic:1.2.3"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter:5.6.2"
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

/** Testing */
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    reports {
        html.enabled = false
    }
}

/** Code Coverage */
jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = false
    }
}

jacoco {
    toolVersion = "0.8.5"
}

/** Upload to Bintray */

jar {
    manifest {
        attributes "Implementation-Title": this.name + project.path.replace(':', '-'),
                   "Implementation-Version": version
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'

    javadoc {
        options {
            links += [
                    "https://docs.oracle.com/en/java/javase/11/docs/api/"
            ]
        }
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = this.name
        name = "yaml4deltaspike"
        desc = project.description
        userOrg = "elypia"
        websiteUrl = website
        licenses = ["Apache-2.0"]
        vcsUrl = repoUrl
        issueTrackerUrl = issueUrl
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = project.description
            vcsTag = project.version
            released = new Date()
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId "yaml4deltaspike"
            groupId project.group
            version project.version
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = this.name
                description = project.description
                url = website
                licenses {
                    license {
                        name = "Apache-2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "Seth"
                        name = "Seth"
                        email = "seth@elypia.org"
                    }
                }
                scm {
                    url = gitUrl
                }
            }
        }
    }
}
